
{ 
   "1-resource-group": {
        "prefix": "az-resource-group",
        "description": "Azure Resource Group",
        "body": [
          "# Source code for the Resource Group Creation",
          "resource \"azurerm_resource_group\" \"resource_group\" {",
          "  #count            = var.rg_enable == 1 ? 1 : 0",
          "  name             = lower(\"rg-${var.resource_group_name}\")",
          "  location         = var.region",
          "}"
        ]
      },

      "2-storage-account": {
        "prefix": "az-storage-account",
        "description": "",
        "body": [
          "resource \"azurerm_storage_account\" \"storage_account\" {",
          "  name                     = lower(\"${var.environment}${var.storage_account_name}\")",
          "  resource_group_name      = var.resource_group_name",
          "  location                 = var.region",
          "  account_tier             = var.account_tier",
          "  account_replication_type = var.account_replication_type",
          "  account_kind             = var.account_kind",
          "  access_tier              = var.access_tier",
          "  tags                     = var.tagvalue",
          "}"
        ]
      },

    "3-network": {
        "prefix": "az-vnet",
        "description": "Azure Virtual Network", 
        "body": [
          "resource \"azurerm_virtual_network\" \"vnet\" {",
          "count               =  var.vnet_enable  == 1 ? length(var.vnet_name) : 0",
          "name                = lower(\"vnet-${var.environment}-${var.vnet_name[count.index]}\")",
          "address_space       = [var.vnet_address[count.index]]",
          "location            = var.region",
          "resource_group_name = var.resource_group_name",
          "tags                = var.tagvalue",
          "}",
        ]
    },
    
    "4-network-subnet": {
        "prefix": "az-subnet",
        "description": "Subnet",
        "body": [
          "resource \"azurerm_subnet\" \"subnet\" {",
          "  count                     = var.subnet_count",
          "  name                      = var.subnet_names[count.index] == \"GatewaySubnet\" ? \"GatewaySubnet\" : \"subnet-${lower(var.environment)}-${lower(var.subnet_names[count.index])}\"",
          "  virtual_network_name      = var.vnet_name",
          "  resource_group_name       = var.resource_group_name",
          "  address_prefix            = var.subnet_range[count.index]",
          "}"
        ]
      },

    "5-vnet-peering": {
        "prefix": "az-vnet-peering",
        "description": "Azure VNET to VNET peering ",
        "body": [
          "provider \"azurerm\" {",
          "  alias           = hub",
          "  tenant_id       = var.tenant_id",
          "  subscription_id = var.env_subscription_id",
          "}",
          "provider \"azurerm\" {",
          "  alias           = spoke",
          "  tenant_id       = var.tenant_id",
          "  subscription_id = var.subscription_id",
          "}",
          "",
          "",
          "#Resource Creation for Peer 1 Connection ",
          "resource \"azurerm_virtual_network_peering\" \"Peer1\" {",
          "  name                         = lower(\"vnet-${var.environment}-${var.vnet_name[0]}-to-vnet-${var.environment}-${var.vnet_name[1]}\")",
          "  resource_group_name          = var.resource_group_name",
          "  virtual_network_name         = \"vnet-\" var.environment\"-\"var.vnet_name[1]",
          "  remote_virtual_network_id    = var.vnet_id",
          "  allow_virtual_network_access = var.allow_virtual_network_access",
          "  allow_forwarded_traffic      = var.allow_forwarded_traffic",
          "  allow_gateway_transit        = var.allow_gateway_transit",
          "  provider                     = azurerm.hub",
          "}",
          "",
          "#Resource Creation for Peer 1 Connection ",
          "resource \"azurerm_virtual_network_peering\" \"Peer2\" {",
          "  name                         = lower(\"vnet-${var.environment}-${var.vnet_name[1]}-to-vnet-${var.environment}-${var.vnet_name[0]}\")",
          "  resource_group_name          = var.bastion_resource_group",
          "  virtual_network_name         = \"vnet-\" var.environment\"-\"var.vnet_name[1]",
          "   remote_virtual_network_id    = var.vnet1_id",
          "  allow_virtual_network_access = var.allow_virtual_network_access",
          "  allow_forwarded_traffic      = var.allow_forwarded_traffic",
          "  allow_gateway_transit        = var.allow_gateway_transit",
          "  use_remote_gateways          = var.use_remote_gateways",
          "  depends_on                   = [azurerm_virtual_network_peering.Peer1]",
          "  provider                     = azurerm.spoke",
          "",
          "}"
        ]
      },

      "6-Network-Security-Group": {
        "prefix": "az-nsg",
        "description": "Azure network security group",
        "body": [
          "resource \"azurerm_network_security_group\" \"networksg\" {",
          "",
          "  name                        =  lower(\"nsg-${var.environment}-${var.nsg_name[count.index]}\")",
          "  location                    = var.region",
          "  resource_group_name         = var.resource_group_name",
          "  tags                        = var.tagvalue",
          "}"
        ]
      },

      "7-NSG-Rules": {
        "prefix": "az-nsg-rules",
        "description": "configured rules for NSG",
        "body": [
          "# Source code for creating configured rules for NSG",
          "resource \"azurerm_network_security_rule\" \"predefined_rules\" {",
          "  count                       = length(var.nsg_rules)",
          "  name                        = var.nsg_rules[count.index]",
          "  priority                    = element(var.rules[var.nsg_rules[count.index]], 0)",
          "  direction                   = element(var.rules[var.nsg_rules[count.index]], 1)",
          "  access                      = element(var.rules[var.nsg_rules[count.index]], 2)",
          "  protocol                    = element(var.rules[var.nsg_rules[count.index]], 3)",
          "  source_port_range           = element(var.rules[var.nsg_rules[count.index]], 4)",
          "  destination_port_range      = element(var.rules[var.nsg_rules[count.index]], 5)",
          "  description                 = element(var.rules[var.nsg_rules[count.index]], 6)",
          "  source_address_prefix       = element(var.rules[var.nsg_rules[count.index]], 7)",
          "  destination_address_prefix  = element(var.rules[var.nsg_rules[count.index]], 8) ",
          "  resource_group_name         = var.resource_group_name",
          "  network_security_group_name = var.nsg_name",
          "}"
        ]
      }, 

      "8-NSG-assocate": {
        "prefix": "az-nsg-assocate-to-subnet",
        "description": "Associate nsg with subnet",
        "body": [
          "# Resource Creation to associate nsg with subnet",
          "resource \"azurerm_subnet_network_security_group_association\" \"networksgassociation\" {",
          "    subnet_id                 = var.subnet_id[count.index]",
          "    network_security_group_id = var.nsg_id[count.index]",
          "   }",
          ""
        ]
      },

      "9-Route-table": {
        "prefix": "az-route-table",
        "description": "Azure UDR Route table",
        "body": [
          "resource \"azurerm_route_table\" \"routetable\" {",
          "  count                         = var.rt_enable  == 1 ? var.subnet_count : 0",
          "  name                          = lower(\"rt-${var.environment}-${var.rt_name[count.index]}\")",
          "  location                      = var.region",
          "  resource_group_name           = var.resource_group_name",
          "  disable_bgp_route_propagation = false",
          "  tags                          = var.tagvalue",
          "}",
          ""
        ]
        
      },

      "10-Route-Table-Route": {
        "prefix": "az-urd-route",
        "description": "UDR route",
        "body": [
          "# Source code for the Route creation for the Route table",
          "resource \"azurerm_route\" \"route\" {",
          "  count                         = var.rt_enable  == 1 ? var.subnet_count : 0",
          "  name                          = \"None\"",
          "  resource_group_name           = var.resource_group_name",
          "  route_table_name              = lower(\"rt-${var.environment}-${var.rt_name[count.index]}\")",
          "  address_prefix                = \"0.0.0.0/0\"",
          "  next_hop_type                 = \"None\"",
          "  depends_on                    = [azurerm_route_table.routetable]",
          "}",
          ""
        ]
        
      },
      
      "11-Route-table-associate": {
        "prefix": "az-route-table-associate",
        "description": "Resource creation to associate rt with subnets",
        "body": [
          "# Resource creation to associate rt with subnets",
          "resource \"azurerm_subnet_route_table_association\" \"rt_subnet_association\" {",
          "  count          = var.rt_enable == 1 ? var.subnet_count : 0",
          "  subnet_id      = var.subnet_id[count.index]",
          "  route_table_id = var.rt_id[count.index]",
          "}"
        ]

      },

      "12-module": {
        "prefix": "module",
        "description": "Terraform module template",
        "body": [
          "module \"yourname\" {",
          "  source = \"moulde file path\"",
          "  # Parameter Definition for the Azure Network Foundation components",
          "    resource_group_name                      = var.resource_group_name",
          "    region                                   = var.region",
          "}"
        ]
      
      },

    "13-network-var": {
        "description": "Variable Declaration",
        "prefix": "az-var",
        "body": ["# Variable Declaration for Resource group name",
        "variable \"resource_group_name\" {",
        "}",
        
        "# Variable Declaration for Region",
        "variable \"region \" {",
          "}",
        ]
    },

    "14-rg-auto-complete": {
      "prefix": "resource_group",
      "body": [
        "azurerm_resource_group"
      ],
      "description": "required fields, location and name"
    },

    "15-vnet-auto-complete": {
      "prefix": "vnet",
      "body": [
        "azurerm_virtual_network"
      ],
      "description": "required fields, location and name"
    }
}


